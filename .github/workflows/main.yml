name: Symportal CI Workfow

on:
  push:
    paths:
      - environment.yml
      - '**/main.yml'

env:
  ENV_NAME: symportal
  CACHE_PATH: /usr/share/miniconda/envs/symportal

jobs:
  setup-conda-env:
    runs-on: ubuntu-latest
    name: Conda Env Job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.ENV_NAME }}
          environment-file: environment.yml
      - name: Cache Conda environment
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: conda-env-${{ env.ENV_NAME }}-${{ hashFiles('environment.yml') }}

  run-tests:
    runs-on: ubuntu-latest
    name: Run Tests Job
    defaults:
      run:
        # to not activate conda environment in each task
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.ENV_NAME }}
      - name: Restore Conda environment from cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH }}
          key: conda-env-${{ hashFiles('environment.yml') }}
          restore-keys: conda-env-
      - name: Set up settings.py
        run: |
          mv settings_blank.py settings.py
          sed -i "s|^SECRET_KEY = ''$|SECRET_KEY = '$(base64 /dev/urandom | head -c50)'|" settings.py
      - name: Configure sp_config.py
        run: |
          mv sp_config_blank.py sp_config.py
      - name: Create SQLite database
        run: |
          python manage.py migrate
      - name: Populate local database
        run: |
          python populate_db_ref_seqs.py
      - name: Run tests
        run: |
          python -m tests.tests
